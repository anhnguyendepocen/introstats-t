head(cardiacinfo)
# filter for data from female subjects only
cardiacinfo_female <- filter(cardiacinfo, gender == 'Female')
cardiacinfo <- cardiacinfo %>%
filter(gender == 'Female') %>%
select(-gender) %>%
mutate(bodytemp_Kelvin = bodytemp_degC - 273)
cardiacinfo <- read.csv('./data/temprates.csv')
cardiacinfo_byGender <- cardiacinfo %>%
group_by(gender) %>%                                  # group by 'gender'
summarize(avg_bodytemp_degF = mean(bodytemp_degF),    # calculate the means of the other variables for each gender
avg_bodytemp_degC = mean(bodytemp_degC),
avg_heartrate_bpm = mean(heartrate_bpm))
cardiacinfo <- read.csv('./data/temprates.csv') %>%
rename(bodytemp_degF = bodytemp, heartrate_bpm = heartrate) %>%
mutate(bodytemp_degC = (bodytemp_degF - 32)*(5/9),
gender = ifelse(gender == 1, 'Female',
ifelse(gender == 2, 'Male', NA)))
cardiacinfo_byGender <- cardiacinfo %>%
group_by(gender) %>%                                  # group by 'gender'
summarize(avg_bodytemp_degF = mean(bodytemp_degF),    # calculate the means of the other variables for each gender
avg_bodytemp_degC = mean(bodytemp_degC),
avg_heartrate_bpm = mean(heartrate_bpm))
cardiacinfo_byGender
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(kableExtra)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
library(tufte)
cardiacinfo <- read.csv('./data/temprates.csv')
# extract the element in the 1st row and 3th column
cardiacinfo[1,3]
# extract rows 5-7 from columns 1-3
cardiacinfo[5:7,1:3]
# extract column 'bodytemp'
temperatures <- cardiacinfo$bodytemp
# select columns 'gender' and 'heartrate'
heartrates <- select(cardiacinfo, gender, heartrate)
head(heartrates)
## append variable names with their respective units
# rename 'bodytemp' to 'bodytemp_degF'
cardiacinfo <- rename(cardiacinfo, bodytemp_degF = bodytemp)
# rename 'heartrate' to 'heartrate_bpm'
cardiacinfo <- rename(cardiacinfo, heartrate_bpm = heartrate)
head(cardiacinfo)
# add new column that records body temperature in degrees celsius
# i.e. subtract 32 from temperature in farenheit and multiply by 5/9
cardiacinfo <- mutate(cardiacinfo, bodytemp_degC = (bodytemp_degF - 32)*(5/9))
# change values in gender column to read "Female" and "Male" instead of 1 and 2
cardiacinfo <- mutate(cardiacinfo, gender = ifelse(gender == 1, 'Female',
ifelse(gender == 2, 'Male', NA)))
head(cardiacinfo)
# filter for data from female subjects only
cardiacinfo_female <- filter(cardiacinfo, gender == 'Female')
cardiacinfo <- cardiacinfo %>%
filter(gender == 'Female') %>%
select(-gender) %>%
mutate(bodytemp_Kelvin = bodytemp_degC - 273)
cardiacinfo <- read.csv('./data/temprates.csv') %>%
rename(bodytemp_degF = bodytemp, heartrate_bpm = heartrate) %>%
mutate(bodytemp_degC = (bodytemp_degF - 32)*(5/9),
gender = ifelse(gender == 1, 'Female',
ifelse(gender == 2, 'Male', NA)))
cardiacinfo_byGender <- cardiacinfo %>%
group_by(gender) %>%                                  # group by 'gender'
summarize(avg_bodytemp_degF = mean(bodytemp_degF),    # calculate the means of the other variables for each gender
avg_bodytemp_degC = mean(bodytemp_degC),
avg_heartrate_bpm = mean(heartrate_bpm))
cardiacinfo_byGender
some_numbers <- c(4,5,6,7,NA,8)
mean(some_numbers)
mean(some_numbers, na.rm = TRUE)
ggplot(data = cardiacinfo, mapping = aes(x = bodytemp)) +
geom_histogram(bins = 50)
ggplot(data = cardiacinfo, mapping = aes(x = bodytemp_degC)) +
geom_histogram(bins = 50)
ggplot(data = cardiacinfo, mapping = aes(x = bodytemp_degC)) +
geom_histogram(bins = 50, aes(y = ..density..))
ggplot(data = cardiacinfo, mapping = aes(x = bodytemp_degC)) +
geom_histogram(bins = 50, aes(y = ..density..), fill = 'lightblue') +
xlab('degrees celsius') +
ggtitle('distribution of body temperatures') +
theme_light()
ggplot(data = cardiacinfo, mapping = aes(x = heartrate_bpm, y = bodytemp_degC)) +
geom_point() +
theme_light()
ggplot(data = cardiacinfo, mapping = aes(x = heartrate_bpm, y = bodytemp_degC, color = gender)) +
geom_point() +
theme_light()
ggplot(data = cardiacinfo, mapping = aes(x = gender, y = bodytemp_degC)) +
geom_boxplot() +
xlab('gender') +
ylab('body temperature (celsius)') +
theme_light()
# create table
kable(cardiacinfo_byGender)
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
library(tufte)
# create table
kable(cardiacinfo_byGender)
# create table
kable(cardiacinfo_byGender)
kable(cardiacinfo[1:6, ])
?dplyr
?ifelse
?ggplot
View(paygap)
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(kableExtra)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
paygap <- read.csv('./data/gender-paygap-2018.csv')
paygap <- paygap %>%
mutate(EmployerSize = factor(EmployerSize, levels = c('0-249','250-499','500-999','1000-4999','5000-19999','20000+')))
View(paygap)
kable(paygap[c(1387,1388), ])
kable(paygap[c(1387,1388,1389), ])
kable(paygap[c(323,343,521,1114,1387,1389,3889,4884,10029), ])
kable(paygap[c(323,343,521,1387,1389,3889,4884,10029), ])
kable(paygap[c(323,343,521,1387,1389,3889,4884,7299,10029), ])
paygap <- read.csv('./data/gender-paygap-2018.csv')
paygap <- paygap %>%
mutate(EmployerSize = factor(EmployerSize, levels = c('0-249','250-499','500-999','1000-4999','5000-19999','20000+')))
kable(paygap[c(323,343,521,1387,1389,3889,4884,7299,10029), ])
kable(paygap[c(323,343,521,1387,1389,3889,4884,7299,10029), c(1,2,3,5,7:10)])
kable(paygap[c(323,343,521,857,1387,1389,3889,4884,6214,7299,10029), c(1,2,3,5,7:10)])
kable(paygap[c(323,343,521,857,1387,1389,1495,3889,4884,6214,7299,10029), c(1,2,3,5,7:10)])
kable(paygap[c(323,343,521,857,1387,1389,1495,3889,4884,6214,7299,10029), c(1,2,3,7:10)])
kable(paygap[c(323,343,521,1387,1389,1495,3313,3889,4884,6214,7294,7299,10029), c(1,2,3,7:10)])
confidence_interval(data = paygap$FemaleBonusPercent, conflevel = 0.95)
confidence_interval <- function(data, conflevel) {
xbar <- mean(data)          # sample mean
n <- length(data)           # sample size
SE <- sd(data) / sqrt(n)    # standard error
alpha <- 1 - conflevel      # alpha
lb <- xbar + qt(alpha/2, df = n-1) * SE    # lower bound
ub <- xbar + qt(1-alpha/2, df = n-1) * SE  # upper bound
cat(paste(c('sample mean =', round(xbar,3), '\n',
conflevel*100, '% confidence interval:', '\n',
'lower bound =', round(lb,3), '\n',
'upper bound =', round(ub,3))))
}
confidence_interval(data = paygap$FemaleBonusPercent, conflevel = 0.95)
confidence_interval(data = paygap$DiffMeanHourlyPercent, conflevel = 0.95)
t.test(paygap$DiffMeanHourlyPercent, mu = 0)
t.test(paygap$FemaleBonusPercent, paygap$MaleBonusPercent)
# use 2019 dataset for this section
# because the 2018 data has too many observations
paygap <- read.csv('./data/gender-paygap-2019.csv')
paygap <- paygap %>%
mutate(EmployerSize = factor(EmployerSize, levels = c('0-249','250-499','500-999','1000-4999','5000-19999','20000+')))
t.test(paygap$FemaleBonusPercent, paygap$MaleBonusPercent)
kable(nycheat[1:5, ], caption = 'NYC Heatwave Data.')
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(kableExtra)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
paygap <- read.csv('./data/gender-paygap-2018.csv')
paygap <- paygap %>%
mutate(EmployerSize = factor(EmployerSize, levels = c('0-249','250-499','500-999','1000-4999','5000-19999','20000+')))
nycheat <- read.csv('./data/nyc-heatwave.csv')
kable(paygap[c(323,343,521,1387,1389,1495,3313,3889,4884,6214,7294,7299,10029), c(1:3,7:10)])
ggplot(aes(x = PropFemaleTopQuartile), data = paygap) +
geom_histogram(bins = 50, aes(y = ..density..)) +
xlab('proportion of females in top-earning quartile') +
theme_bw()
summary(paygap$PropFemaleTopQuartile)
mean(paygap$PropFemaleTopQuartile)
median(paygap$PropFemaleTopQuartile)
ggplot(aes(x = PropFemaleTopQuartile), data = paygap) +
geom_histogram(bins = 50, aes(y = ..density..)) +
xlab('proportion of females in top-earning quartile') +
geom_vline(xintercept = 0.102, linetype = 'dashed', color = 'violet') +
annotate('text', x = 0.17, y = 2, label = 'Mode', color = 'violet', size=5) +
theme_bw()
sd(paygap$PropFemaleTopQuartile)
plot1 <- ggplot(aes(x = PropFemaleTopQuartile), data = paygap) +
geom_histogram(bins = 50, aes(y = stat(density))) +
xlab('proportion of females in the top-earning quartile') +
geom_vline(xintercept = mean(paygap$PropFemaleTopQuartile), linetype = 'dashed', color = 'red') +
annotate('text', x = 0.47, y = 2, label = 'Mean', color = 'red') +
geom_vline(xintercept = median(paygap$PropFemaleTopQuartile), linetype = 'dashed', color = 'blue') +
annotate('text', x = 0.30, y = 2, label = 'Median', color = 'blue') +
geom_vline(xintercept = 0.105, linetype = 'dashed', color = 'violet') +
annotate('text', x = 0.17, y = 2, label = 'Mode', color = 'violet') +
theme_bw()
plot2 <- ggplot(aes(x = PropMaleTopQuartile), data = paygap) +
geom_histogram(bins = 50, aes(y = stat(density))) +
xlab('proportion of males in the top-earning quartile') +
geom_vline(xintercept = mean(paygap$PropMaleTopQuartile), linetype = 'dashed', color = 'red') +
annotate('text', x = 0.51, y = 2, label = 'Mean', color = 'red') +
geom_vline(xintercept = median(paygap$PropMaleTopQuartile), linetype = 'dashed', color = 'blue') +
annotate('text', x = 0.71, y = 2, label = 'Median', color = 'blue') +
geom_vline(xintercept = 0.90, linetype = 'dashed', color = 'violet') +
annotate('text', x = 0.83, y = 2, label = 'Mode', color = 'violet') +
theme_bw()
grid.arrange(plot1, plot2, ncol = 2)
skewness(paygap$PropFemaleTopQuartile)
skewness(paygap$PropMaleTopQuartile)
library(datasets)
ggplot(aes(x = as.factor(Expt), y = Speed + 299000), data = morley) +
geom_boxplot() +
ggtitle('Michelson-Morley Experimental Data 1879') +
xlab('experiment no.') + ylab('speed of light (km/s)') +
theme_bw()
X <- c(round(runif(n = 9, min = 21, max = 22),1), 83.4)
kable(t(X))
mad(paygap$PropFemaleTopQuartile)
confidence_interval <- function(data, conflevel) {
xbar <- mean(data)          # sample mean
n <- length(data)           # sample size
SE <- sd(data) / sqrt(n)    # standard error
alpha <- 1 - conflevel      # alpha
lb <- xbar + qt(alpha/2, df = n-1) * SE    # calculate lower bound
ub <- xbar + qt(1-alpha/2, df = n-1) * SE  # calculate upper bound
cat(paste(c('sample mean =', round(xbar,3), '\n',
conflevel*100, '% confidence interval:', '\n',
'lower bound =', round(lb,3), '\n',
'upper bound =', round(ub,3))))
}
confidence_interval(data = paygap$DiffMeanHourlyPercent, conflevel = 0.95)
t.test(paygap$DiffMeanHourlyPercent, mu = 0)
# use 2019 dataset for this section
# because the 2018 data has too many observations
paygap <- read.csv('./data/gender-paygap-2019.csv')
paygap <- paygap %>%
mutate(EmployerSize = factor(EmployerSize, levels = c('0-249','250-499','500-999','1000-4999','5000-19999','20000+')))
t.test(paygap$FemaleBonusPercent, paygap$MaleBonusPercent)
kable(nycheat[1:5, ], caption = 'NYC Heatwave Data.')
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(kableExtra)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
yhat <- predict(reg1)
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(kableExtra)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
paygap <- read.csv('./data/gender-paygap-2019.csv')
paygap <- paygap %>%
mutate(EmployerSize = factor(EmployerSize, levels = c('0-249','250-499','500-999','1000-4999','5000-19999','20000+')))
nycheat <- read.csv('./data/nyc-heatwave.csv')
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=1) +
stat_smooth(method='lm') +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_bw()
reg1 <- lm(temperature ~ ndvi, data = nycheat)
summary(reg1)
yhat <- predict(reg1)
View(yhat)
nycheat <- nycheat %>%
mutate(temp_prediction = yhat)
Viwe(nycheat)
View(nycheat)
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point()
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 5)
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 1)
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5)
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5) +
stat_smooth(method='lm') +
geom_segment(alpha = 0.5, aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_pred))
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5) +
stat_smooth(method='lm') +
geom_segment(alpha = 0.5, aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_prediction))
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5) +
stat_smooth(method='lm') +
geom_segment(aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_prediction),
alpha = 0.3, color = 'lightblue')
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5) +
stat_smooth(method='lm') +
geom_segment(aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_prediction),
alpha = 0.7, color = 'lightblue')
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5) +
stat_smooth(method='lm') +
geom_segment(aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_prediction),
alpha = 0.7, color = 'blue')
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5) +
stat_smooth(method='lm') +
geom_segment(aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_prediction),
alpha = 0.7, color = 'blue') +
theme_light()
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.5) +
stat_smooth(method='lm') +
geom_segment(aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_prediction),
alpha = 0.3, color = 'black') +
theme_light()
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temp_prediction)) +
geom_point(size = 0.5) +
theme_light()
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5) +
stat_smooth(method='lm') +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_classic()
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm') +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_classic()
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_classic()
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_classic() +
theme(axis.text.x = NULL)
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_classic() +
theme(axis.line.x = NULL)
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_classic() +
theme(axis = NULL)
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme(axis.text = NULL)
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme(axis.text.x = NULL)
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme(axis.line = element_blank())
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme(axis.line = element_blank(), axis.text.x = element_blank())
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme(axis.text.x = element_blank())
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank()) +
theme_classic()
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_classic() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
summary(reg1)
yhat <- predict(reg1)
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(kableExtra)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
library(tufte)
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature_prediction)) +
geom_point(size=0.5) +
theme_minimal()
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse)
library(ggplot2)
library(knitr)
library(kableExtra)
library(extraDistr)
library(gridExtra)
library(latex2exp)
library(moments)
library(bookdown)
library(rsconnect)
library(tufte)
paygap <- read.csv('./data/gender-paygap-2019.csv')
paygap <- paygap %>%
mutate(EmployerSize = factor(EmployerSize, levels = c('0-249','250-499','500-999','1000-4999','5000-19999','20000+')))
nycheat <- read.csv('./data/nyc-heatwave.csv')
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5) +
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_bw()
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5) +
stat_smooth(method='lm') +           # overlay regression line
xlab('NDVI (vegetation index)') + ylab('temperature (farenheit)') +
theme_bw()
ggplot(aes(x = ndvi, y = temperature), data = nycheat) +
geom_point(size=0.5, color = 'white') +
stat_smooth(method='lm', se = FALSE) +
xlab('x') + ylab('y') +
theme_classic() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
reg1 <- lm(formula = temperature ~ ndvi, data = nycheat)
nycheat <- nycheat %>%
mutate(temp_prediction = predict(reg1))
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.7, alpha = 0.5) +
stat_smooth(method='lm', se = FALSE) +
geom_segment(aes(x = ndvi, xend = ndvi, y = temperature, yend = temp_prediction),
alpha = 0.3, color = 'black') +
xlab("vegetation") + ylab("temperature") +
theme_light()
reg1 <- lm(formula = temperature ~ ndvi, data = nycheat)
summary(reg1)
nycheat <- nycheat %>%
mutate(temperature_prediction = predict(reg1))
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature_prediction)) +
geom_point(size=0.5) +
theme_minimal()
92.4-19.46*0.2
ggplot(data = nycheat, mapping = aes(x = ndvi, y = temperature)) +
geom_point(size = 0.7, alpha = 0.5) +
stat_smooth(method='lm', SE = FALSE) +
geom_segment(aes(x = ndvi, xend = ndvi,
y = temperature, yend = temperature_prediction),
alpha = 0.3, color = 'black') +
xlab("vegetation") + ylab("temperature") +
theme_light()
cor(nycheat)
View(nycheat)
nycheat <- read.csv('./data/nyc-heatwave.csv')
cor(nycheat[2:6])
install.packages("corrplot")
corrplot(nycheat[2:6], method = 'ellipse')
library(corrplot)
corrplot(nycheat[2:6], method = 'ellipse')
corrplot(nychea, method = 'ellipse')
corrplot(nycheat, method = 'ellipse')
reg2 <- lm(formula = temperature ~ ndvi + albedo + building_height + pop_density, data = nycheat)
summary(reg2)
summary(nycheat$area)
reg3 <- lm(formula = temperature ~ area, data = nycheat)
summary(reg3)
reg3 <- lm(formula = temperature ~ albedo + area, data = nycheat)
summary(reg3)
reg3 <- lm(formula = temperature ~ ndvi + albedo + area, data = nycheat)
summary(reg3)
unique(nycheat$area)
